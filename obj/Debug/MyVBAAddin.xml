<?xml version="1.0"?>
<doc>
<assembly>
<name>
MyVBAAddin
</name>
</assembly>
<members>
<member name="T:MyVBAAddin.My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:MyVBAAddin.My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:MyVBAAddin.My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="T:MyVBAAddin.Connect">
 <summary>
The Object For implementing an Add-In. Users don't need to change the "GUID"
for this add-in. But if you are trying to use this code and modify something 
to use it as well as using the provided .dll file as one of the add-ins then you must change it.
 </summary>
 <seealso class='IDTExtensibility2' />
</member>
<member name="M:MyVBAAddin.Connect.OnConnection(System.Object,Extensibility.ext_ConnectMode,System.Object,System.Array@)">
 <summary>
 Implements the OnConnection method of the IDTExtensibility2 interface.
 Receives notification that the Add-in is being loaded.
 </summary>
 <param name="Application">
 Root object of the host application.
 </param>
 <param name="ConnectMode">
 Describes how the Add-in is being loaded.
 </param>
 <param name="AddInInst">
 Object representing this Add-in.
 </param>
 <seealso class='IDTExtensibility2' />
</member>
<member name="M:MyVBAAddin.Connect.OnDisconnection(Extensibility.ext_DisconnectMode,System.Array@)">
 <summary>
 Implements the OnDisconnection method of the IDTExtensibility2 interface.
 Receives notification that the Add-in is being unloaded.
 </summary>
 <param name="RemoveMode">
 Describes how the Add-in is being unloaded.
 </param>
 <param name="custom">
 Array of parameters that are host application specific.
 </param>
 <seealso class='IDTExtensibility2' />
</member>
<member name="M:MyVBAAddin.Connect.OnStartupComplete(System.Array@)">
 <summary>
 Implements the OnStartupComplete method of the IDTExtensibility2 interface.
 Receives notification that the host application has completed loading.
 </summary>
 <param name="custom">
 Array of parameters that are host application specific.
 </param>
 <seealso class='IDTExtensibility2' />
</member>
<member name="M:MyVBAAddin.Connect.OnAddInsUpdate(System.Array@)">
 <summary>
 Implements the OnAddInsUpdate method of the IDTExtensibility2 interface.
 Receives notification that the collection of Add-ins has changed.
 </summary>
 <param name="custom">
 Array of parameters that are host application-specific.
 </param>
 <seealso class='IDTExtensibility2' />
</member>
<member name="M:MyVBAAddin.Connect.OnBeginShutdown(System.Array@)">
 <summary>
 Implements the OnBeginShutdown method of the IDTExtensibility2 interface.
 Receives notification that the host application is being unloaded.
 </summary>
 <param name="custom">
 Array of parameters that are host application-specific.
 </param>
 <seealso class='IDTExtensibility2' />
</member>
<member name="M:MyVBAAddin.Connect.InitializeAddIn">
 <summary>
 Whenever the connection is made Add-in needs to initialize.
 </summary>
</member>
<member name="M:MyVBAAddin.Connect.CreateToolWindow(System.String,System.String,System.Windows.Forms.UserControl)">
 <summary>
 Host a window by UserControlHost.
 </summary>
 <param name="toolWindowCaption">
 String you need to put as a header on the window.
 </param>
 <param name="toolWindowGuid">
 This uniquely identified a particular window can be used to store 
 information of it like size, position, etc.
 </param>
 <param name="toolWindowUserControl">
 Windows to host.
 </param>
</member>
<member name="M:MyVBAAddin.Connect._Button_Click(Microsoft.Office.Core.CommandBarButton,System.Boolean@)">
 <summary>
 Implement the click event of the button.
 </summary>
 <param name="Ctrl"></param>
 <param name="CancelDefault"></param>
</member>
<member name="M:MyVBAAddin.UserControlToolWindow1.writeToDataGrid(System.Collections.Generic.List{System.String}@)">
 <summary>
 Iterate through the list, Add the row to DataGrid and put the list item value in it.
 </summary>
 <param name="lines">list of data to show in window.</param>
</member>
<member name="M:MyVBAAddin.UserControlToolWindow1.DataGridView1_CellClick(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)">
 <summary>
 Implementation of the event, When the DataGrid cell is clicked.
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
</member>
</members>
</doc>
